% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plus_raster.R
\name{plus_raster}
\alias{plus_raster}
\title{Create a raster annotation from raster input}
\usage{
plus_raster(
  x,
  col,
  ...,
  breaks = NULL,
  alpha = 1,
  rgb = TRUE,
  dim = c(256, 256),
  interpolate = FALSE
)
}
\arguments{
\item{x}{a BasicRaster}

\item{col}{optional colours for image-like mapping}

\item{...}{ignored}

\item{breaks}{optional manual breaks for mapping to `col`}

\item{alpha}{defaults to 1, set from 0-1 for constant transparancy}

\item{rgb}{defaults to `TRUE`, set to `FALSE` to allow manual colour mapping on first layer only}

\item{dim}{optional dimensions for lazyraster input case}

\item{interpolate}{logical passed to [ggplot2::annotation_raster()]}
}
\value{
ggplot2 annotation object
}
\description{
Input is a single layer or a 3-or-4 layer raster. With single
the function works like [image()] mapping values to colours, with 3 (or 4)
these are intepreted directly as RGB by scaling into `[0,1]`.
}
\details{
The `alpha` defines a constant value, but can be set in the input
raster of 4-layers or as a vector for every cell of the data.
}
\examples{
library(raster)
library(ggplot2)
ggplot() + plus_raster(raster(volcano))  ## only works because we in [0,1,0,1]

## general case we need xlim/ylim
r <- raster(volcano, xmn = 0, xmx = 10, ymn = -2, ymx = 50)
ggplot() + plus_raster(r, col = rainbow(10), breaks = seq(90, 190, by = 10))  +
  xlim(0, 10) + ylim(0, 50) + coord_equal()
}
